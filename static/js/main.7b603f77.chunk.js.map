{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","theme","button","margin","spacing","App","React","useState","name","setName","message","setMessage","sendSuccess","setSendSuccess","messageList","setMessageList","zeroMessage","setZeroMessage","error","setError","messageToBack","url","useEffect","axios","get","then","res","data","length","console","log","handleSubmit","e","a","preventDefault","post","setTimeout","classes","className","onSubmit","TextField","id","label","variant","value","onChange","target","multiline","rowsMax","Button","color","type","Alert","severity","map","_id","ReactDOM","render","document","getElementById"],"mappings":"iRAUMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNC,OAAQF,EAAMG,QAAQ,QAsGXC,MAlGf,WAAgB,IAAD,EACWC,IAAMC,SAAS,IAD1B,mBACNC,EADM,KACAC,EADA,OAEiBH,IAAMC,SAAS,IAFhC,mBAENG,EAFM,KAEGC,EAFH,OAGyBL,IAAMC,UAAS,GAHxC,mBAGNK,EAHM,KAGOC,EAHP,OAIyBP,IAAMC,SAAS,IAJxC,mBAINO,EAJM,KAIOC,EAJP,OAKyBT,IAAMC,UAAS,GALxC,mBAKNS,EALM,KAKOC,EALP,OAMaX,IAAMC,UAAS,GAN5B,mBAMNW,EANM,KAMCC,EAND,KAQPC,EAAgB,CAAEZ,OAAME,WAExBW,EAAM,2DAGZf,IAAMgB,WAAU,WACd,IACEC,IAAMC,IAAIH,GAAKI,MAAK,SAACC,GACnBX,EAAeW,EAAIC,MAEK,IAApBD,EAAIC,KAAKC,QACXX,GAAe,MAGnB,MAAOC,GACPW,QAAQC,IAAIZ,MAEb,CAACN,IAEJ,IAAMmB,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,yDACnBD,EAAEE,iBACG1B,GAASE,EAFK,uBAGjBS,GAAS,GAHQ,iCAMnBN,GAAe,GANI,kBASXU,IAAMY,KAAKd,EAAKD,GATL,OAUjBgB,YAAW,WACTvB,GAAe,KACd,KACHJ,EAAQ,IACRE,EAAW,IACXQ,GAAS,GAfQ,kDAiBjBU,QAAQC,IAAR,MAjBiB,0DAAH,sDAqBZO,EAAUtC,IAChB,OACE,sBAAKuC,UAAU,MAAf,UACE,uBAAMC,SAAUR,EAAcO,UAAU,OAAxC,UACE,cAACE,EAAA,EAAD,CACEtB,MAAOA,EACPuB,GAAG,iBACHC,MAAM,OACNC,QAAQ,WACRC,MAAOpC,EACPqC,SAAU,SAACb,GAAD,OAAOvB,EAAQuB,EAAEc,OAAOF,UAEpC,cAACJ,EAAA,EAAD,CACEtB,MAAOA,EACPuB,GAAG,8BACHC,MAAM,UACNK,WAAS,EACTC,QAAS,GACTJ,MAAOlC,EACPiC,QAAQ,WACRE,SAAU,SAACb,GAAD,OAAOrB,EAAWqB,EAAEc,OAAOF,UAGvC,cAACK,EAAA,EAAD,CACEN,QAAQ,YACRO,MAAM,UACNZ,UAAWD,EAAQnC,OACnBiD,KAAK,SAJP,kBAQCvC,GACC,cAACwC,EAAA,EAAD,CAAOC,SAAS,UAAhB,0CAEDrC,GAAe,cAACoC,EAAA,EAAD,CAAOC,SAAS,OAAhB,+BAElB,oBAAIf,UAAU,cAAd,SACGxB,EAAYwC,KAAI,SAAC5C,GAChB,OACE,qBAAI4B,UAAU,WAAd,UACE,mBAAGA,UAAU,WAAb,SAAyB5B,EAAQF,OACjC,mBAAG8B,UAAU,cAAb,SAA4B5B,EAAQA,YAFRA,EAAQ6C,cCnGlDC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7b603f77.chunk.js","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport axios from \"axios\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nfunction App() {\n  const [name, setName] = React.useState(\"\");\n  const [message, setMessage] = React.useState(\"\");\n  const [sendSuccess, setSendSuccess] = React.useState(false);\n  const [messageList, setMessageList] = React.useState([]);\n  const [zeroMessage, setZeroMessage] = React.useState(false);\n  const [error, setError] = React.useState(false);\n\n  const messageToBack = { name, message };\n\n  const url = \"https://peaceful-forest-09240.herokuapp.com/api/messages\";\n  // const url ='http://localhost:5555/api/messages'\n\n  React.useEffect(() => {\n    try {\n      axios.get(url).then((res) => {\n        setMessageList(res.data);\n\n        if (res.data.length === 0) {\n          setZeroMessage(true);\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [sendSuccess]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!name || !message) {\n      setError(true);\n      return;\n    }\n    setSendSuccess(true);\n\n    try {\n      await axios.post(url, messageToBack);\n      setTimeout(() => {\n        setSendSuccess(false);\n      }, 2000);\n      setName(\"\");\n      setMessage(\"\");\n      setError(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const classes = useStyles();\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleSubmit} className=\"form\">\n        <TextField\n          error={error}\n          id=\"outlined-basic\"\n          label=\"Name\"\n          variant=\"outlined\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <TextField\n          error={error}\n          id=\"outlined-multiline-flexible\"\n          label=\"Message\"\n          multiline\n          rowsMax={10}\n          value={message}\n          variant=\"outlined\"\n          onChange={(e) => setMessage(e.target.value)}\n        />\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          type=\"submit\"\n        >\n          Send\n        </Button>\n        {sendSuccess && (\n          <Alert severity=\"success\">Your message is send success</Alert>\n        )}\n        {zeroMessage && <Alert severity=\"info\">You first user</Alert>}\n      </form>\n      <ul className=\"listMessage\">\n        {messageList.map((message) => {\n          return (\n            <li className=\"listItem\" key={message._id}>\n              <p className=\"nameUser\">{message.name}</p>\n              <p className=\"messageText\">{message.message}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}